# tell docker what version of the docker-compose.yml we're using
version: '3'

# define the network
networks:
  web-network:

# start the services section
services:

  docker-nginx:
    build: 
      context: ./nginx
    # defines the port mapping
    # corresponds to the "-p" flag
    ports:
      - "80:80"
    tty: true
    volumes:
      - ./app:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/log:/var/log/nginx
    links:
      - mysql
      - redis
    environment:
      DEBUG: 1
      PRODUCTION: "false"
      DB_HOST: mysql
      DB_DATABASE: database
      DB_USERNAME: app
      DB_PASSWORD: password
      REDIS_HOST: redis
      SESSION_DRIVER: redis
      CACHE_DRIVER: redis
      MYSQL_USER: app
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: database
    networks:
      - web-network

  docker-php-fpm:
    build: 
      context: ./php-fpm
    tty: true
    volumes:
      - ./app:/var/www
    links:
      - mysql
      - redis      
    networks:
      - web-network

  mysql:
    image: mysql:5.7
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: database
      MYSQL_USER: app
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    networks:
      - web-network

  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - web-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 8888:80
    volumes:
      - ./sessions:/sessions
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PASSWORD: password
    networks:
      - web-network